{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","CommentList","comments","map","PostInfo","post","title","length","PostList","posts","id","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,QCJGC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKL,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCK,EAAQF,OAE/C,iCACG,IACA,OACA,OAGH,mBACEH,UAAU,qBACVC,KAAI,iBAAYI,EAAQH,OAF1B,SAIGG,EAAQH,WAIb,qBAAKF,UAAU,oBAAf,SACGK,EAAQC,WCjBFC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKR,UAAU,cAAf,SACGQ,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,UCF7BK,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKX,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGW,EAAKC,QAGPD,EAAKZ,MACJ,8BACG,eAED,cAAC,EAAD,CAAUA,KAAMY,EAAKZ,aAK3B,mBAAGC,UAAU,iBAAb,SACGW,EAAKL,OAEkB,IAAzBK,EAAKH,SAASK,OACb,qCACE,uBACA,mBAAG,UAAQ,oBAAX,gCAGF,cAAC,EAAD,CAAaL,SAAUG,EAAKH,gBC3BrBM,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKf,UAAU,WAAf,SACGe,EAAMN,KAAI,SAAAE,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKK,UCW/B,IAAMD,EAAQE,EAAgBR,KAAI,SAAAE,GAAI,kCACxCA,GADwC,IAE3CZ,MAPmBmB,EAODP,EAAKO,OANhBC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKiB,KAAOE,MAC3C,MAMLV,UAZsBa,EAYGV,EAAKK,GAXvBM,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQgB,SAAWA,QADjE,IAAwBA,EAIHH,KAWRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUe,MAAOA,QCrBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.581d060c.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      <span>\n        {' '}\n        {' by '}\n        {' '}\n      </span>\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment} />\n    ))}\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      {post.user && (\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={post.user} />\n        </p>\n      )}\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n    {post.comments.length === 0 ? (\n      <>\n        <hr />\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      </>\n    ) : (\n      <CommentList comments={post.comments} />\n    )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getCommentById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}